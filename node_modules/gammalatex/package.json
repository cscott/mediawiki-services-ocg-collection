{
  "name": "gammalatex",
  "version": "0.0.7",
  "description": "A simple latex wrapper around 'pdflatex' binary",
  "main": "app.js",
  "scripts": {
    "test": "exit 0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gammasoft/latex.git"
  },
  "keywords": [
    "latex",
    "wrapper",
    "pdf"
  ],
  "author": {
    "name": "Gammasoft Desenvolvimento de Software Ltda",
    "email": "contact@gammasoft.com.br"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "rimraf": "~2.2.2"
  },
  "readme": "gammalatex\n==========\n[![NPM][NPM1]][NPM2]\n\nA simple latex wrapper for the `pdflatex` binary.\n\nYou don't have to worry about rerunning `pdflatex` in order to get the cross-references right.\n\n#### Prerequisites\nYou must have `pdflatex` installed (or another LaTeX command, see `setCompileCommand` below).\n\n**Linux**: `sudo yum install texlive-latex`\n\n**Mac OS**: [MacTeX](http://tug.org/mactex/)\n\n#### Installation\n\n```bash\nnpm install --save gammalatex\n```\n\nThen `var latex = require(\"gammalatex\");` on any node.js file.\n\n#### API\n\n- **.parse(string, callbackFunction)**  \n\t*string*: String containing valid latex syntax  \n\t*callbackFunction*: A function that will be called after parsing your string. Signature: *callbackFunction(err, readStream)*\n\n- **.setPreParseHook(callbackFunction)**  \n\t*callbackFunction*: A function that will be called **before** running `pdflatex`. Signature: *callbackFunction(params, cb)*\n\n- **.setPostParseHook(callbackFunction)**  \n\t*callbackFunction*: A function that will be called **after** running `pdflatex`. Signature: *callbackFunction(params, cb)*\n\n- **.addRerunIndicator(string)**  \n\t*string*: A string to check against `pdflatex` log output to determine whether `pdflatex` must be rerun.\n\n- **.setCompileCommand(object)**  \n\t*object*: An object with one mandatory field: `command` gives the name of the latex command, for example `'pdflatex'`, `'xelatex'`, etc.  An optional `options` field gives an array of additional command-line options.  An optional `texpath` field gives a value for the `TEXINPUTS` environment variable, used to specify additional search paths for latex files and packages.  An optional `tmpdir` field gives a path for a temporary working directory.\n\n#### Usage\n```javascript\nvar \n\tutil = require(\"util\"),\n\tlatex = require(\"gammalatex\"),\n\tfs = require(\"fs\");\n\nvar string = [\n              \"\\\\documentclass{article}\",\n              \"\\\\begin{document}\",\n              \"Gammasoft Desenvolvimento de Software Ltda\",\n              \"\\\\end{document}\"\n              ].join(\"\\n\");\n\nlatex.parse(string, function(err, readStream){\n\tif(err) throw err;\n\t\n\tvar writeStream = fs.createWriteStream(\"output.pdf\");\n\tutil.pump(readStream, writeStream);\n});\n```\n\n**See a full example [here](https://github.com/gammasoft/latex/blob/master/example.js).**\n\n### License\n\nMIT License\n\n[NPM1]: https://nodei.co/npm/gammalatex.png\n[NPM2]: https://nodei.co/npm/gammalatex/\n",
  "bugs": {
    "url": "https://github.com/gammasoft/latex/issues"
  },
  "_id": "gammalatex@0.0.7",
  "dist": {
    "shasum": "68aba34ca1c576dcdaf6ef07583887c6927fc558"
  },
  "_from": "gammalatex@~0.0.7",
  "_resolved": "https://registry.npmjs.org/gammalatex/-/gammalatex-0.0.7.tgz"
}
